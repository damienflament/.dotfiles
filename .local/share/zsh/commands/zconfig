# zconfig COMMAND
#
# Handles the shell configuration.
#
# The shell configuration is usually customized by manually editing the
# configuration files. But this command make some common tasks easilly
# available from the interactive shell.
function zconfig
{
    autoload zerror

    readonly command=${1:?The command must be specified.}

    case "$command" in
        (get)
            shift
            __zconfig-get "$@"
            ;;
        (reload)
            exec -l zsh
            ;;
        (recompile)
            return
            ;;
        (deploy)
            shift
            __zconfig-deploy "$@"
            ;;
        (*)
            zerror "command '$command' not available"
            return 1
            ;;
    esac
}

function __zconfig-get
{
    autoload zerror

    readonly name=${1?:The configuration name must be specified}
    readonly type=${(Pt)name}
    local description="${description}$name ($type) = "
    local value

    case "$type" in
        (integer*|float*)
            value="${(P)name}"
            ;;
        (scalar*)
            value="\"${(P)name}\""
            ;;
        (array*)
            description="${description}\n"
            value="${(PF)name}"
            ;;
        ('')
            zerror "$name is not defined"
            return 1
            ;;
        (*)
            zerror "type '$type' not handled"
            return 2
            ;;
    esac

    print "${description}${value}"
}

function __zconfig-deploy
{
    # zmodload zparseopts
    autoload check_available not zerror

    check_available sudo git rm || return $?

    sudo --validate --prompt="In order to deploy configuration to %U user, please give its password:" || return $?

    typeset -ga zconfig_deploy_targets=( $zconfig_deploy_targets )
    readonly destination=$(sudo --set-home --shell echo \$HOME)
    # local -a options

    # zparseopts -D -a options - -clean

    sudo --shell <<_SCRIPT_

    cd "$destination"
    git init --quiet

    git ls-remote '$USERNAME' &>/dev/null

    if (( \$? != 0 ))
    then
        git remote add '$USERNAME' "$HOME"
        git remote set-url --push '$USERNAME' ''
    fi

    git fetch --quiet '$USERNAME'
    git checkout --quiet --force -B sync '$USERNAME'/master
    git reset --quiet --hard
    git checkout --quiet sync

    rm --recursive --force ./.git
_SCRIPT_
}

# Completion
autoload compdef

compdef _zconfig zconfig

function _zconfig
{
    local -a commands=(
        'get:get a configuration value'
        'reload:reload the shell configuration'
        'recompile:recompile the configuration files'
        'deploy:deploy the configuration to the root user'
    )

    if (( CURRENT == 2 ))
    then
        _describe -t commands 'commands' commands
    fi
}

# vim: ft=zsh