# zconfig COMMAND
#
# Handles the shell configuration.
#
# The shell configuration is usually customized by manually editing the
# configuration files. But this command make some common tasks easilly
# available from the interactive shell.
function zconfig
{
    autoload zerror

    readonly command=${1:?The command must be specified.}

    case "$command" in
        (get)
            shift
            __zconfig-get "$@"
            ;;
        (reload)
            exec -l zsh
            ;;
        (recompile)
            return
            ;;
        (deploy)
            shift
            __zconfig-deploy "$@"
            ;;
        (*)
            zerror "command '$command' not available"
            return 1
            ;;
    esac
}

function __zconfig-get
{
    autoload zerror

    readonly name=${1?:The configuration name must be specified}
    readonly type=${(Pt)name}
    local description="${description}$name ($type) = "
    local value

    case "$type" in
        (integer*|float*)
            value="${(P)name}"
            ;;
        (scalar*)
            value="\"${(P)name}\""
            ;;
        (array*)
            description="${description}\n"
            value="${(PF)name}"
            ;;
        ('')
            zerror "$name is not defined"
            return 1
            ;;
        (*)
            zerror "type '$type' not handled"
            return 2
            ;;
    esac

    print "${description}${value}"
}

# __zconfig-deploy-target <source> <destination> <target>
function __zconfig-deploy-target
{
    autoload check_available zerror

    check_available sudo install mkdir || return $?

    readonly source="${1?:The source must be specified}"
    readonly destination="${2?:The destination must be specified}"
    readonly target="${3?:The target must be specified}"
    readonly source_target="$source/$target"
    readonly destination_target="$destination/$target"
    local subtarget

    if [[ -f "$source_target" ]]
    then
        sudo \install --preserve-timestamps --mode=400 "$source_target" "$destination_target"
    elif [[ -d "$source_target" ]]
    then
        for subtarget in $source_target/.#*(:t)
        do
            sudo \install  --mode=100 --directory "$destination_target"
            __zconfig-deploy-target "$source_target" "$destination_target" "$subtarget"
        done
    else
        zerror "Don't know how to deploy $source_target"
    fi
}

function __zconfig-deploy
{
    autoload check_available zerror zmessage

    check_available sudo rm tree || return $?

    ZCONFIG_DEPLOY_TARGETS=(
        '.config/zsh'
        '.local/share/zsh'
    )

    sudo --validate --prompt="In order to deploy configuration to %U user, please give its password:" || return $?

    readonly source="$HOME"
    readonly destination="$(sudo --set-home --shell echo \$HOME)"
    local target

    if [[ "$source" == "$destination" ]]
    then
        zerror "source and destination are identical: $source"
    fi

    for target in $ZCONFIG_DEPLOY_TARGETS
    do
        zmessage "Deploying $target..."

        sudo \rm --recursive --force "$destination/$target"
        __zconfig-deploy-target "$source" "$destination" "$target"

        sudo tree -a "$destination/$target"
    done
}

# Completion
autoload compdef

compdef _zconfig zconfig

function _zconfig
{
    local -a commands=(
        'get:get a configuration value'
        'reload:reload the shell configuration'
        'recompile:recompile the configuration files'
        'deploy:deploy the configuration to the root user'
    )

    if (( CURRENT == 2 ))
    then
        _describe -t commands 'commands' commands
    fi
}

# vim: ft=zsh
